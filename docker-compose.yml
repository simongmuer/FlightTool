version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://flighttool:flighttool_password@postgres:5432/flighttool
      - SESSION_SECRET=${SESSION_SECRET:-please-change-this-session-secret}
      - PORT=3000
      - REPLIT_DOMAINS=${DOMAIN:-localhost}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs
    networks:
      - flighttool-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=flighttool
      - POSTGRES_USER=flighttool
      - POSTGRES_PASSWORD=flighttool_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flighttool"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - flighttool-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - flighttool-network

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  flighttool-network:
    driver: bridge